{"version":3,"file":"account~asset.4641d609835130ec36e7.js","sources":["webpack:///app/components/Utility/FormattedFee.jsx","webpack:///app/components/Account/FundFeePool.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormattedAsset from \"./FormattedAsset\";\nimport ChainTypes from \"./ChainTypes\";\nimport BindToChainState from \"./BindToChainState\";\nimport {estimateFee} from \"common/trxHelper\";\n\n/**\n *\n *  Given an operation type, displays the CORE fee for that operation\n *\n */\n\nclass FormattedFee extends React.Component {\n    static propTypes = {\n        globalObject: ChainTypes.ChainObject.isRequired,\n        opType: PropTypes.string,\n        options: PropTypes.array\n    };\n\n    static defaultProps = {\n        globalObject: \"2.0.0\",\n        options: []\n    };\n\n    getFee() {\n        // Return fee via refs\n        return estimateFee(\n            this.props.opType,\n            this.props.options,\n            this.props.globalObject\n        );\n    }\n\n    render() {\n        let {opType, options, globalObject} = this.props;\n\n        if (!opType || !options || !globalObject) {\n            return null;\n        }\n\n        let amount = estimateFee(opType, options, globalObject);\n\n        return <FormattedAsset amount={amount} asset=\"1.3.0\" />;\n    }\n}\n\nexport default BindToChainState(FormattedFee);\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport Translate from \"react-translate-component\";\n\nimport AccountSelector from \"../Account/AccountSelector\";\nimport AmountSelector from \"../Utility/AmountSelector\";\nimport FormattedAsset from \"../Utility/FormattedAsset\";\nimport FormattedFee from \"../Utility/FormattedFee\";\nimport AssetActions from \"actions/AssetActions\";\nimport AssetWrapper from \"../Utility/AssetWrapper\";\nimport {ChainStore} from \"bitsharesjs\";\n\nconst stateSetter = (that, key, transform = value => value) => value =>\n    that.setState({[key]: transform(value)});\n\nconst keyGetter = key => object => object[key];\n\nclass FundFeePool extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.initialState();\n    }\n    onAccountNameChanged = stateSetter(this, \"funderAccountName\");\n    onAccountChanged = stateSetter(this, \"newFunderAccount\");\n    onPoolInput = stateSetter(this, \"fundPoolAmount\", keyGetter(\"amount\"));\n    onFundPool = () =>\n        AssetActions.fundPool(\n            this.state.newFunderAccount\n                ? this.state.newFunderAccount.get(\"id\")\n                : null,\n            this.props.core,\n            this.props.asset,\n            this.state.fundPoolAmount.replace(/,/g, \"\")\n        );\n    reset = () => {\n        this.setState(this.initialState());\n    };\n    initialState = () => ({\n        funderAccountName: this.props.funderAccountName,\n        fundPoolAmount: 0\n    });\n    render = () => {\n        const {\n            props,\n            state,\n            onPoolInput,\n            onFundPool,\n            reset,\n            onAccountNameChanged,\n            onAccountChanged\n        } = this;\n        const {asset, core, hideBalance, getDynamicObject} = props;\n        const {funderAccountName, fundPoolAmount, newFunderAccount} = state;\n        let dynamicObject = null;\n        if (!hideBalance)\n            dynamicObject = getDynamicObject(\n                asset.get(\"dynamic_asset_data_id\")\n            );\n        const coreID = core.get(\"id\") || \"1.3.0\";\n        const account = newFunderAccount;\n        let balance = 0;\n        if (newFunderAccount) {\n            const coreBalanceID = newFunderAccount.getIn([\"balances\", coreID]);\n            if (coreBalanceID) {\n                let balanceObject = ChainStore.getObject(coreBalanceID);\n                if (balanceObject) {\n                    balance = balanceObject.get(\"balance\");\n                }\n            }\n        }\n        const balanceText = (\n            <span>\n                <Translate component=\"span\" content=\"transfer.available\" />:&nbsp;\n                <FormattedAsset amount={balance} asset={coreID} />\n            </span>\n        );\n        return (\n            <div>\n                <Translate\n                    component=\"p\"\n                    content=\"explorer.asset.fee_pool.fund_text\"\n                    asset={asset.get(\"symbol\")}\n                    core={core.get(\"symbol\")}\n                />\n\n                {hideBalance || (\n                    <div style={{paddingBottom: \"1.5rem\"}}>\n                        <Translate content=\"explorer.asset.fee_pool.pool_balance\" />\n                        <span>: </span>\n                        {dynamicObject ? (\n                            <FormattedAsset\n                                amount={dynamicObject.get(\"fee_pool\")}\n                                asset={coreID}\n                            />\n                        ) : null}\n                    </div>\n                )}\n\n                <AccountSelector\n                    label=\"transaction.funding_account\"\n                    accountName={funderAccountName}\n                    onChange={onAccountNameChanged}\n                    onAccountChanged={onAccountChanged}\n                    account={funderAccountName}\n                    error={null}\n                    tabIndex={1}\n                />\n\n                <AmountSelector\n                    label=\"transfer.amount\"\n                    display_balance={balanceText}\n                    amount={fundPoolAmount}\n                    onChange={onPoolInput}\n                    asset={coreID}\n                    assets={[coreID]}\n                    placeholder=\"0.0\"\n                    tabIndex={2}\n                    style={{width: \"100%\", paddingTop: 16}}\n                />\n\n                <div style={{paddingTop: \"1rem\"}}>\n                    <button\n                        className={classnames(\"button\", {\n                            disabled: fundPoolAmount <= 0\n                        })}\n                        onClick={onFundPool}\n                    >\n                        <Translate content=\"transaction.trxTypes.asset_fund_fee_pool\" />\n                    </button>\n                    <button className=\"button outline\" onClick={reset}>\n                        <Translate content=\"account.perm.reset\" />\n                    </button>\n                    <br />\n                    <br />\n                    <p>\n                        <Translate content=\"account.user_issued_assets.approx_fee\" />:{\" \"}\n                        <FormattedFee opType=\"asset_fund_fee_pool\" />\n                    </p>\n                    <hr />\n                </div>\n            </div>\n        );\n    };\n}\n\nFundFeePool = AssetWrapper(FundFeePool, {\n    propNames: [\"asset\", \"core\"],\n    defaultProps: {\n        core: \"1.3.0\"\n    },\n    withDynamic: true\n});\n\nexport default FundFeePool;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;;;;;;;;;;;AAYA;AACA;AACA;AAKA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AA/BA;AACA;AADA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AACA;AAFA;AACA;AACA;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AACA;AAFA;AAGA;AACA;;AALA;AACA;;;;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAJA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AANA;AAQA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAIA;AAlBA;AA3CA;AAiEA;;;AAGA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;AAOA;;;;A","sourceRoot":""}