{"version":3,"file":"create-worker.774b97182b6d69d79c57.js","sources":["webpack:///app/components/Account/CreateWorker.jsx"],"sourcesContent":["import React from \"react\";\nimport {connect} from \"alt-react\";\nimport ApplicationApi from \"api/ApplicationApi\";\nimport AccountStore from \"stores/AccountStore\";\nimport utils from \"common/utils\";\nimport notify from \"actions/NotificationActions\";\nimport Translate from \"react-translate-component\";\n\nclass CreateWorker extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            title: null,\n            start: new Date(),\n            end: null,\n            pay: null,\n            url: \"http://\",\n            vesting: 7\n        };\n    }\n\n    shouldComponentUpdate(np, ns) {\n        return (\n            np.currentAccount !== this.props.currentAccount,\n            !utils.are_equal_shallow(ns, this.state)\n        );\n    }\n\n    onSubmit() {\n        ApplicationApi.createWorker(\n            this.state,\n            this.props.currentAccount\n        ).catch(error => {\n            console.log(\"error\", error);\n            let error_msg =\n                error.message &&\n                error.message.length &&\n                error.message.length > 0\n                    ? error.message.split(\"stack\")[0]\n                    : \"unknown error\";\n\n            notify.addNotification({\n                message: `Failed to create worker: ${error_msg}`,\n                level: \"error\",\n                autoDismiss: 10\n            });\n        });\n    }\n\n    render() {\n        console.log(\"state:\", this.state);\n        return (\n            <div className=\"grid-block\" style={{paddingTop: 20}}>\n                <div className=\"grid-content large-9 large-offset-3 small-12\">\n                    <Translate\n                        content=\"explorer.workers.create\"\n                        component=\"h3\"\n                    />\n                    <form style={{maxWidth: 800}}>\n                        <Translate\n                            content=\"explorer.workers.create_text_1\"\n                            component=\"p\"\n                        />\n                        <Translate\n                            content=\"explorer.workers.create_text_2\"\n                            component=\"p\"\n                        />\n\n                        <label>\n                            <Translate content=\"explorer.workers.title\" />\n                            <input\n                                onChange={e => {\n                                    this.setState({title: e.target.value});\n                                }}\n                                type=\"text\"\n                            />\n                        </label>\n                        <Translate\n                            content=\"explorer.workers.name_text\"\n                            component=\"p\"\n                        />\n                        <div\n                            style={{\n                                width: \"50%\",\n                                paddingRight: \"2.5%\",\n                                display: \"inline-block\"\n                            }}\n                        >\n                            <label>\n                                <Translate content=\"account.votes.start\" />\n                                <input\n                                    onChange={e => {\n                                        this.setState({\n                                            start: new Date(e.target.value)\n                                        });\n                                    }}\n                                    type=\"date\"\n                                />\n                            </label>\n                        </div>\n                        <div\n                            style={{\n                                width: \"50%\",\n                                paddingLeft: \"2.5%\",\n                                display: \"inline-block\"\n                            }}\n                        >\n                            <label>\n                                <Translate content=\"account.votes.end\" />\n                                <input\n                                    onChange={e => {\n                                        this.setState({\n                                            end: new Date(e.target.value)\n                                        });\n                                    }}\n                                    type=\"date\"\n                                />\n                            </label>\n                        </div>\n                        <Translate\n                            content=\"explorer.workers.date_text\"\n                            component=\"p\"\n                        />\n\n                        <label>\n                            <Translate content=\"explorer.workers.daily_pay\" />\n                            <input\n                                onChange={e => {\n                                    this.setState({pay: e.target.value});\n                                }}\n                                type=\"number\"\n                            />\n                        </label>\n                        <Translate\n                            content=\"explorer.workers.pay_text\"\n                            component=\"p\"\n                        />\n\n                        <label>\n                            <Translate content=\"explorer.workers.website\" />\n                            <input\n                                onChange={e => {\n                                    this.setState({url: e.target.value});\n                                }}\n                                type=\"text\"\n                            />\n                        </label>\n                        <Translate\n                            content=\"explorer.workers.url_text\"\n                            component=\"p\"\n                        />\n\n                        <label>\n                            <Translate content=\"explorer.workers.vesting_pay\" />\n                            <input\n                                defaultValue={this.state.vesting}\n                                onChange={e => {\n                                    this.setState({\n                                        vesting: parseInt(e.target.value)\n                                    });\n                                }}\n                                type=\"number\"\n                            />\n                        </label>\n                        <Translate\n                            content=\"explorer.workers.vesting_text\"\n                            component=\"p\"\n                        />\n\n                        <div\n                            className=\"button-group\"\n                            onClick={this.onSubmit.bind(this)}\n                        >\n                            <div className=\"button\" type=\"submit\">\n                                Publish\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default (CreateWorker = connect(CreateWorker, {\n    listenTo() {\n        return [AccountStore];\n    },\n    getProps() {\n        return {\n            currentAccount: AccountStore.getState().currentAccount\n        };\n    }\n}));\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAWA;AACA;;;AACA;AACA;AAIA;;;AAEA;AACA;AAIA;AACA;AACA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AANA;AAFA;AAPA;AAmBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AANA;AAFA;AAPA;AAmBA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAPA;AAFA;AAYA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAJA;AA/GA;AALA;AADA;AAiIA;;;;AA9KA;AACA;AAgLA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AARA;;;;A","sourceRoot":""}