{"version":3,"file":"news.85cbd1c6a67dfe131942.js","sources":["webpack:///app/components/News.jsx","webpack:///ws (ignored)?7756"],"sourcesContent":["import React from \"react\";\nimport counterpart from \"counterpart\";\nimport {api} from \"steem-js-api\";\nimport Translate from \"react-translate-component\";\nimport LoadingIndicator from \"./LoadingIndicator\";\n\nconst query = {tag: \"blockchained\", limit: 20};\n\nconst alignRight = {textAlign: \"right\"};\nconst alignLeft = {textAlign: \"left\"};\nconst rowHeight = {height: \"2rem\"};\nconst bodyCell = {padding: \"0.5rem 1rem\"};\nconst headerCell = {padding: \"0.85rem 1rem\"};\n\nconst leftCell = {...alignLeft, ...bodyCell};\nconst rightCell = {...alignRight, ...bodyCell};\n\nconst leftCellHeader = {...alignLeft, ...headerCell};\nconst rightCellHeader = {...alignRight, ...headerCell};\n\nconst secondCol = {...leftCell, width: \"180px\"};\n\nconst SomethingWentWrong = () => (\n    <p>\n        <Translate content=\"news.errors.fetch\" />\n    </p>\n);\n\nconst ReusableLink = ({data, url, isLink = false}) => (\n    <a\n        href={`https://steemit.com${url}`}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        style={{display: \"block\"}}\n        className={!isLink ? \"primary-text\" : \"\"}\n    >\n        {data}\n    </a>\n);\n\nconst NewsTable = ({data, width}) => {\n    return (\n        <table\n            className=\"table table-hover dashboard-table\"\n            style={{fontSize: \"0.85rem\"}}\n        >\n            <thead>\n                <tr>\n                    <th style={rightCellHeader}>\n                        <Translate\n                            component=\"span\"\n                            content=\"account.votes.line\"\n                        />\n                    </th>\n                    <th style={leftCellHeader}>\n                        <Translate\n                            component=\"span\"\n                            content=\"explorer.block.date\"\n                        />\n                    </th>\n                    <th style={leftCellHeader}>\n                        <Translate component=\"span\" content=\"news.subject\" />\n                    </th>\n                    <th style={leftCellHeader}>\n                        <Translate component=\"span\" content=\"news.author\" />\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {data.map((singleNews, iter) => {\n                    const theAuthor = singleNews.parentAuthor\n                        ? singleNews.parentAuthor\n                        : singleNews.author;\n                    const formattedDate = counterpart.localize(\n                        new Date(singleNews.created)\n                    );\n                    const smartTitle =\n                        singleNews.title.length * 6 > width - 450\n                            ? `${singleNews.title.slice(\n                                  0,\n                                  Math.floor(width - 450) / 6\n                              )}...`\n                            : singleNews.title;\n                    return (\n                        <tr key={`${singleNews.title.slice(0, 10)}${iter}`}>\n                            <td style={rightCell}>\n                                <ReusableLink\n                                    data={iter + 1}\n                                    url={singleNews.url}\n                                />\n                            </td>\n                            <td style={secondCol}>\n                                <ReusableLink\n                                    data={formattedDate}\n                                    url={singleNews.url}\n                                />\n                            </td>\n                            <td style={leftCell}>\n                                <ReusableLink\n                                    data={smartTitle}\n                                    url={singleNews.url}\n                                    isLink\n                                />\n                            </td>\n                            <td style={leftCell}>\n                                <ReusableLink\n                                    data={theAuthor}\n                                    url={singleNews.url}\n                                />\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n            <thead>\n                <tr style={rowHeight}>\n                    <th style={rightCell} />\n                    <th style={leftCell} />\n                    <th style={leftCell} />\n                    <th style={leftCell} />\n                </tr>\n            </thead>\n        </table>\n    );\n};\n\nclass News extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            isWrong: false,\n            discussions: [],\n            width: 1200\n        };\n        this.updateDimensions = this.updateDimensions.bind(this);\n        this.orderDiscussions = this.orderDiscussions.bind(this);\n    }\n\n    updateDimensions() {\n        this.setState({width: window.innerWidth});\n    }\n\n    orderDiscussions(discussions) {\n        const orderedDiscussions = discussions.sort(\n            (a, b) => new Date(b.created) - new Date(a.created)\n        );\n        this.setState({discussions: orderedDiscussions, isLoading: false});\n    }\n\n    componentDidMount() {\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions);\n        api.getDiscussionsByBlog(query)\n            .then(discussions => {\n                this.orderDiscussions(discussions);\n            })\n            .catch(() => {\n                this.setState({isLoading: false, isWrong: true});\n            });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n\n    render() {\n        const {isLoading, isWrong, discussions, width} = this.state;\n\n        return (\n            <div className=\"grid-block page-layout\">\n                <div className=\"grid-block vertical\">\n                    <div className=\"account-tabs\">\n                        <div className=\"tab-content\">\n                            <div className=\"grid-block vertical\">\n                                {isWrong && <SomethingWentWrong />}\n                                {isLoading ? <LoadingIndicator /> : null}\n                                {!isWrong &&\n                                    !isLoading && (\n                                        <NewsTable\n                                            width={width}\n                                            data={discussions}\n                                        />\n                                    )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default News;\n","/* (ignored) */"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AADA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAPA;AADA;AACA;AAWA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAhBA;AADA;AAsBA;AAAA;AAAA;AACA;AACA;AAGA;AAGA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AApBA;AA4BA;AA5CA;AA8CA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AAxEA;AAkFA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AATA;AAUA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAEA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAFA;AALA;AADA;AADA;AADA;AADA;AAoBA;;;;AAhEA;AACA;AAkEA;;;;;;;ACjMA;;;;A","sourceRoot":""}